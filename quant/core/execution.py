#!/usr/bin/python
# -*- coding: utf-8 -*-

import queue
import datetime
from abc import ABCMeta, abstractmethod

from quant.core.event import FillEvent, OrderEvent


class ExecutionHandler(object, metaclass=ABCMeta):
    """
    The ExecutionHandler abstract class handles the interaction
    between a set of order objects generated by a Portfolio and
    the ultimate set of Fill objects that actually occur in the
    market. 

    The handlers can be used to subclass simulated brokerages
    or live brokerages, with identical interfaces. This allows
    strategies to be backtested in a very similar manner to the
    live trading engine.
    """

    @abstractmethod
    def on_order(self, event:OrderEvent):
        """
        Takes an Order event and executes it, producing
        a Fill event that gets placed onto the Events queue.

        Parameters:
        event - Contains an Event object with order information.
        """
        raise NotImplementedError("Should implement exec_order()")
